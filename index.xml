<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Hushh Labs</title>
<link>https://hushh-labs.github.io/hushh-labs-blog/</link>
<atom:link href="https://hushh-labs.github.io/hushh-labs-blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Tue, 30 Jan 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>You (Probably) Don’t Need an Embedding Database</title>
  <dc:creator>Justin Donaldson</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/you_dont_need_a_vector_database.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_database_mainframe_on_a_set_of_scales_0aed1fa7-f060-407f-abf5-f87e61c8038f.png" class="img-fluid figure-img"></p>
<figcaption>Vector database on a set of digital scales</figcaption>
</figure>
</div>
<p>If you’ve been paying attention to the recent advances in Large Language Models (LLM), you’ve noticed that a whole new crop of startups emerged to provide search over embeddings.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/1688152025187.png" class="img-fluid figure-img"></p>
<figcaption>Vector libraries and databases (<a href="https://blog.det.life/why-you-shouldnt-invest-in-vector-databases-c0cd3f59d23c">source</a>)</figcaption>
</figure>
</div>
<p>Search over embeddings is a very different process than search over a database of documents. Embedding search uses a vector space representation of an image or document that has been created by a corresponding model, rather than an inverted index of terms and documents. Search in a vector space is typically handled with <em><a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm_">nearest neighbor</a></em> search, which returns the embeddings of the closest records to the target record. This technique is much more intensive to calculate than a simple inverted index lookup, and accordingly databases need to make trade offs for precision/recall in order to provide reasonable performance over large sets of data.</p>
<section id="embedding-databases-for-smaller-datasets" class="level2">
<h2 class="anchored" data-anchor-id="embedding-databases-for-smaller-datasets">Embedding Databases for Smaller Datasets</h2>
<p>Here at Hushh we were suprised to realize that there wasn’t a good option for smaller/portable embeddings for databases. Many modeling tasks rely on smaller and more domain-specific datasets to perform domain-specific tasks. For instance, image recognition models might need to index the products of a given storefront. There may be many thousand products, but often not the millions of products that would necessitate a standalone database. Furthermore, a standalone database would need to be running at all times, incurring a large one-time cost for any sort of embedding search functionality.</p>
<p>If one doesn’t have a lot of data, and doesn’t want to pay the maintenance fee on hosted embedding search, using an embedding search database is costly overkill, but what are the options?</p>
<p>Many embedding databases and models use python, so accordingly, the embeddings can be exported in the <a href="https://docs.python.org/3/library/pickle.html">python pickle</a> format. However, the pickle format is <em>unsafe</em>, making it a risky bet for production systems.</p>
<p>JSON formats can also be used for pickling data, but JSON requires all of the embedding data to be <em>decoded</em> and loaded into memory. This process can take a significant amount of time, making it costly to load/unload embedding datasets on the fly.</p>
<p><a href="https://msgpack.org/index.html">Messagepack</a> is another solid option, optimized for speed and portability. Originally, this was the format that we were likely to use. However, in the back of our minds we wondered, can we make it even faster?</p>
</section>
<section id="introducing-the-hushh-catalog-format" class="level2">
<h2 class="anchored" data-anchor-id="introducing-the-hushh-catalog-format">Introducing The Hushh Catalog Format</h2>
<p>We introduce the <em><a href="https://github.com/hushh-labs/hushh-vibe-catalog">Hushh Catalog Format</a> (HCF)</em>, a file format that is optimized for speedy (and lazy) loading of embeddings from disk.</p>
<p>To understand the performance benefits of the HCF format, we’ll use this <a href="https://www.kaggle.com/datasets/paramaggarwal/fashion-product-images-small">fashion dataset</a> comprising ~44K product images, representative of the fashion offerings of a mid-to-large size department store.</p>
<p>We’ll also take figures and data from this <a href="https://github.com/hushh-labs/hushh-vibe-catalog/blob/main/notebooks/Create%20Catalog.ipynb">data science notebook</a> that contains the result of the analysis.</p>
</section>
<section id="comparisons" class="level2">
<h2 class="anchored" data-anchor-id="comparisons">Comparisons</h2>
<p>For the purposes of comparison, we’ll generate embedding vectors in three different formats:</p>
<ul>
<li>JSON : A popular option for web development due to it being human-readable</li>
<li>Msgpack : A schema-less binary format that is a good option for smaller/faster serialization</li>
<li>Hushh Catalog Format : A format with a schema designed especially for storing product information and metadata.</li>
</ul>
<section id="file-size" class="level3">
<h3 class="anchored" data-anchor-id="file-size">File Size</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/file_size.png" class="img-fluid figure-img"></p>
<figcaption>File Size Comparison</figcaption>
</figure>
</div>
<p>File sizes for smaller/embedded databases can add a lot of overhead for search. In our first comparison we look at the file size from our example dataset and see that HCF is half the size of messagepack, and a less than 25% the size of a comparable json format.</p>
<p>File size matters a lot for databases, particularly since files like messagepack and json need to be loaded fully into memory. If you have a bigger file format, your program will use more memory to store it internally, which adds overhead for resource usage and time.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/loading_time.png" class="img-fluid figure-img"></p>
<figcaption>Loading Time Comparison</figcaption>
</figure>
</div>
<p>Interestingly enough, the file size difference becomes even more pronounced when the loading time is compared. The HCF format is a whopping <em>20,000 times faster</em> at loading the embedding data than JSON, and also beats msgpack by over an order of magnitude.</p>
<p><em>How is this possible?</em></p>
<p>The answer is that the Hushh Catalog Format reader doesn’t read in the data all at once. Instead, it streams it in as necessary directly from disk without needing to parse the entire file. This technique of <em>lazy loading</em> enables the Hushh Catalog Format to all but eliminate a startup delay when loading embedding data.</p>
<p><em>What was used to build the Hushh Catalog Format?</em></p>
<p>The Hushh Catalog Format is built on top of <a href="https://flatbuffers.dev/">flatbuffers</a>. Flatbuffers is similar to <a href="https://protobuf.dev/">protobuffers</a>, except it’s designed for larger amounts of data that can be streamed lazily. Flatbuffers excel at loading densely packed numeric and textual data in a structured format. The structured format requires a schema, and here’s the current <a href="https://github.com/hushh-labs/hushh-vibe-catalog/blob/main/schemas/hushh-catalog.fbs">schema for Hushh Catalog Format</a></p>
<p>Using the schema, we can use flatbuffers to generate python <a href="https://github.com/hushh-labs/hushh-vibe-catalog/blob/main/python/src/hushh/hcf/Catalog.py">runtime classes</a> that stream the file into memory, along with some <a href="https://github.com/hushh-labs/hushh-vibe-catalog/blob/main/python/src/hushh/catalog.py">helper constructor methods</a>. There’s runtime classes for <a href="https://github.com/hushh-labs/hushh-vibe-catalog/blob/main/swift/Sources/hushh-catalog_generated.swift">Swift</a> available as well, with more to come.</p>
</section>
</section>
<section id="what-can-you-do-with-the-hushh-catalog-format" class="level2">
<h2 class="anchored" data-anchor-id="what-can-you-do-with-the-hushh-catalog-format">What can you do with the Hushh Catalog Format?</h2>
<p>For now, the format is geared towards providing catalog search services. Accordingly, information pertaining to products are supported. As we expand the scope of the format, we will enable more fine-tuned schemas for a growing number of open source personal data formats.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=DIVTqXQXGuA"><img src="https://img.youtube.com/vi/DIVTqXQXGuA/0.jpg" class="img-fluid figure-img" alt="Vibe Search"></a></p>
<figcaption>Vibe Search</figcaption>
</figure>
</div>
<p>We’re using the HCF format as a way of providing portable embedding indexes that are available from the phone or from a web server. Our Vibe search service will use it under the hood, making state of the art embedding search more easily available to everyone!</p>
</section>
<section id="related-reading" class="level2">
<h2 class="anchored" data-anchor-id="related-reading">Related Reading</h2>
<p>If you’re interested in optimized file protocols specifically for machine learning artifacts, check this <a href="https://vickiboykis.com/2024/02/28/gguf-the-long-way-around/">overview of GGUF by Vicki Boykis</a>.</p>


</section>

 ]]></description>
  <category>embedding</category>
  <category>search</category>
  <category>open source</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/you_dont_need_a_vector_database.html</guid>
  <pubDate>Tue, 30 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>A Survey on Language Models and Related Data Privacy</title>
  <dc:creator>Harshvardhan, Justin Donaldson, Manish Sainani</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/survey_on_llm_privacy.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_data_privacy_AI_home_secure_f87b681d-8207-46b6-adf4-4e2981b09f18.png" class="img-fluid figure-img"></p>
<figcaption>AI Privacy</figcaption>
</figure>
</div>
<section id="abstract" class="level1">
<h1>Abstract</h1>
<p>(Note: Original form of this document available <a href="https://drive.google.com/file/d/1HO4_r7gw2_HOH_FqHI7gVog4u3qYOpPn/view?usp=share_link">here</a>)</p>
<p>This survey paper delves into the current revolution of Language models, specifically Large Language models (LLMs) and Fine-tuned models (FTMs). It explores the accessibility of these models across various domains of work while emphasizing the importance of privacy concerns when interacting with on-cloud LLMs.</p>
<p>The study examines the influence of pre-training data, training data, and test data on the performance and capabilities of language models. Furthermore, it provides a comprehensive analysis of the potential use cases and limitations of large language models in different natural language processing tasks. These tasks include knowledge-intensive tasks, traditional natural language understanding tasks, natural language generation tasks, emergent abilities, and specific task considerations.</p>
<p>Given that training models often require extensive and representative datasets, which may contain sensitive information, it becomes crucial to protect user privacy. The paper discusses algorithmic techniques for learning and conducts a refined analysis of privacy costs within the framework of differential privacy. It explores interrelated concepts associated with differential privacy, such as privacy loss, mechanisms of differential privacy, local and centralized differential privacy, and the applications of differential privacy in statistics, machine learning, and federated learning.</p>
<p>By addressing the aforementioned aspects, this survey paper contributes to the understanding of language models’ revolution, their accessibility across domains, privacy concerns, and the incorporation of differential privacy to mitigate privacy risks.</p>
</section>
<section id="Sec:Introduction" class="level1">
<h1>Introduction</h1>
<p>Natural Language Processing (NLP) has garnered significant attention, largely driven by the emergence of Large Language Models (LLMs) like GPT (Generative Pre-trained Transformer). LLMs represent powerful NLP tools that enable computers to grasp and generate human-like language. They achieve this by analyzing extensive training data, learning the structure, syntax, and semantics of words and phrases. LLMs find practical applications in natural language understanding, generation, knowledge-intensive tasks, and the enhancement of reasoning capabilities.</p>
<p>LLMs can be distinguished from fine-tuned models, which are smaller language models crafted for specific tasks. LLMs, being more versatile, excel at comprehending new or unfamiliar data and are valuable in situations with limited training data. The choice between LLMs and fine-tuned models hinges on the specific task requirements.</p>
<p>Data plays a pivotal role in the operation of language models and can be divided into pretraining data, finetuning data, and test data. Pretraining data serves as the basis for LLMs, training them on a variety of textual sources, imparting language and contextual knowledge. Finetuning data assists in determining the suitability of LLMs or fine-tuned models based on the availability of annotated data. Test data is indispensable for evaluating model performance and detecting domain shifts.</p>
<p>In real-world applications, language models encounter challenges stemming from noisy data and user requests that deviate from predefined distributions. LLMs, given their exposure to diverse datasets, tend to handle real-world scenarios more effectively than fine-tuned models. Privacy concerns are also paramount, especially when dealing with user data. Differential privacy algorithms, which introduce calibrated noise to the output, serve to protect the privacy of individuals’ data during language model training. The selection of privacy parameters, such as epsilon and delta, is contingent on the desired privacy level and the utility of the results.</p>
<p>Diverse training strategies and model architectures exist within the domain of LLMs, including encoder-only language models (e.g., BERT) and decoder-only language models (e.g., GPT). These models offer various advantages and are suitable for different applications and contexts. Few-shot and zero-shot learning techniques further augment the capabilities of LLMs and fine-tuned models.</p>
<p>Furthermore, stochastic gradient descent (SGD) and the PATE algorithm provide approaches to training language models with privacy protection. SGD introduces noise to the gradients during training, preserving the privacy of model parameters. The PATE algorithm amalgamates the predictions of multiple models with added noise, generating differentially private labels for training.</p>
<p>Local differential privacy offers more robust privacy assurances by operating on data versions that do not retain original sensitive information. Federated Learning provides a decentralized approach where models are trained locally and then aggregated to form a global model. Different approaches, such as centralized, decentralized, and heterogeneous Federated Learning, offer distinct benefits and challenges.</p>
<p>Through the application of techniques like differential privacy, data science researchers aim to strike a balance between utility and privacy, ensuring that language models preserve the confidentiality of sensitive information.</p>
</section>
<section id="discussions-on-language-models" class="level1">
<h1>Discussions on Language Models</h1>
<p>In recent times, Large Language Models (LLMs) have become a focal point in the field of Natural Language Processing (NLP). NLP is the realm of computer science that delves into how computers can comprehend and interact with human language. It involves training computers to understand, interpret, and generate human language in a manner akin to human communication. LLMs, such as GPT, are significant applications in NLP. They achieve this by analyzing a substantial amount of training data to develop an understanding of the structure, syntax, and meaning of words and phrases, allowing them to produce coherent and contextually appropriate responses.</p>
<p>To understand the abilities of Large Language Models (LLMs), it’s essential to compare them with fine-tuned models. LLMs are expansive language models trained on extensive data without specific adjustments for particular tasks. In contrast, fine-tuned models are generally smaller language models trained and further customized for specific tasks. In simple terms, fine-tuned models are more specialized and optimized for specific tasks compared to LLMs.</p>
<p>Practical applications of language models are numerous. One crucial application is natural language understanding. LLMs excel at comprehending and making sense of human language, even when encountering new or unfamiliar data. This makes them valuable for tasks involving language comprehension in various contexts or with limited training data.</p>
<p>Another application is natural language generation. LLMs have the ability to generate coherent, relevant, and high-quality text. This can be harnessed in various applications where computers need to create text, such as article writing, generating chatbot responses, or even crafting stories.</p>
<p>Language models also play a significant role in knowledge-intensive tasks. LLMs have been trained on vast amounts of data, making them repositories of knowledge about different domains and general information about the world. This knowledge can be leveraged to assist in tasks that require specific expertise or a general understanding.</p>
<p>Lastly, language models can enhance reasoning abilities. LLMs are designed to understand patterns and relationships in language, which can be useful for decision-making and problem-solving in various scenarios. By utilizing the reasoning capabilities of LLMs, we can improve decision-making and tackle complex problems effectively.</p>
<p>Within the domain of Large Language Models (LLMs), researchers employ various training strategies, model architectures, and use cases. These models can be categorized into two main types: encoder-only language models and decoder-only language models.</p>
<p>Encoder-only language models, also known as Encoder-Decoder models or BERT-style language models, are used when there is abundant natural language data available. These models are trained using the Masked Language Model technique, where the model predicts masked words in a sentence while considering the surrounding context. This training approach allows the model to develop a deeper understanding of word relationships and contextual usage. Typically, these models employ the Transformer architecture, a powerful deep learning model for processing and comprehending natural language.</p>
<p>On the other hand, decoder-only language models, such as GPT-style language models, are designed to understand and generate human-like text. These models analyze patterns in large training datasets and predict what comes next in a given sequence of words. Unlike encoder-only models, decoder-only models focus on generating text rather than understanding it in a conversational context. They can be used for tasks like generating creative writing, answering questions, or aiding in language-related tasks. These models are trained as Autoregressive Language Models, where they generate the next word in a sequence based on preceding words, showcasing the strength of autoregressive language models.</p>
<p>Furthermore, both encoder-only and decoder-only models benefit from few-shot and zero-shot learning. Few-shot learning enables the models to learn new concepts with just a few examples, while zero-shot learning allows them to grasp entirely new concepts without any examples at all. These approaches empower the models to perform well on tasks they haven’t been explicitly trained for by leveraging prior knowledge and transferring knowledge from related tasks.</p>
<p>Speaking of data, data serves as the fuel for language models, powering their functioning. However, a challenge known as “out-of-distribution data” arises, which refers to information or examples that differ from what a machine learning model has been trained on. This includes inputs that the model has never encountered before. Large Language Models (LLMs) are known to handle such unfamiliar data better than fine-tuned models.</p>
</section>
<section id="understanding-different-data-categories" class="level1">
<h1>Understanding Different Data Categories</h1>
<p>To gain a deeper understanding of data, let’s categorize it into three types: pretraining data, finetuning data, and test data.</p>
<section id="pretraining-data" class="level2">
<h2 class="anchored" data-anchor-id="pretraining-data">Pretraining Data</h2>
<p>This data plays a pivotal role as it forms the foundation for language models. Pretraining involves training language models on text sources such as websites and articles. This carefully curated data ensures that language models possess a rich understanding of word knowledge, grammar, syntax, semantics, context, and the ability to generate coherent responses. The diversity of pretraining data sets Large Language Models (LLMs) apart from other models in terms of usability.</p>
</section>
<section id="finetuning-data" class="level2">
<h2 class="anchored" data-anchor-id="finetuning-data">Finetuning Data</h2>
<p>The choice between using LLMs or fine-tuned models depends on the availability of annotated data in three scenarios:</p>
<section id="zero-annotated-data" class="level3">
<h3 class="anchored" data-anchor-id="zero-annotated-data">Zero Annotated Data</h3>
<p>When no annotated data is available, LLMs excel in a zero-shot setting. They outperform previous methods that do not rely on annotated data. LLMs avoid catastrophic forgetting, meaning their parameters remain unchanged as they don’t undergo a parameter update process.</p>
</section>
<section id="few-annotated-data" class="level3">
<h3 class="anchored" data-anchor-id="few-annotated-data">Few Annotated Data</h3>
<p>If only a small amount of annotated data is available, LLMs incorporate these examples directly into their input prompt, known as in-context learning. This guides LLMs effectively and enables them to understand and perform tasks. Recent studies have shown that even with just one or a few annotated examples, LLMs can achieve significant improvements and match the performance of state-of-the-art fine-tuned models in open-domain tasks. Scaling LLMs can enhance their zero/few-shot capabilities. Fine-tuned models can also be improved using few-shot learning methods, but they may be outperformed by LLMs due to their smaller scale and potential overfitting.</p>
</section>
<section id="abundant-annotated-data" class="level3">
<h3 class="anchored" data-anchor-id="abundant-annotated-data">Abundant Annotated Data</h3>
<p>When a substantial amount of annotated data is available, both fine-tuned models and LLMs can be considered. Fine-tuned models fit the data well in most cases, but LLMs can be preferred when specific constraints like privacy need to be addressed. The choice between fine-tuned models and LLMs depends on factors like desired performance, computational resources, and deployment constraints specific to the task at hand.</p>
</section>
</section>
<section id="test-data" class="level2">
<h2 class="anchored" data-anchor-id="test-data">Test Data</h2>
<p>This refers to a set of examples used to evaluate the performance and accuracy of a model or system. It helps researchers and developers understand how well their models work and identify areas for improvement before real-world use. Test data is crucial as it reveals disparities between the trained data and new data, known as domain shifts. These shifts can hinder the performance of fine-tuned models due to their specific distribution and limited generalization ability.</p>
<p>Now let’s delve into the utilization of LLMs (Large Language Models) and fine-tuned models in real-world tasks. In these scenarios, we often encounter a significant challenge called “Noisy data.” This means that the input received from real-world non-experts is not always clean and well-defined. These users may have limited knowledge of how to interact with the model or may not be fluent in using text. Another challenge is the lack of task formatting, where users may not clearly express their desired predictions or may have multiple implicit intents.</p>
<p>To overcome these challenges, it is crucial for models to understand user intents and provide outputs that align with those intents. However, real-world user requests often deviate significantly from the distribution of NLP datasets designed for specific tasks. Studies have shown that LLMs are better suited to handle real-world scenarios compared to fine-tuned models. This is because LLMs have been trained on diverse datasets that cover various writing styles, languages, and domains. They also demonstrate a strong ability to generate open-domain responses, making them well-suited for these real-world scenarios.</p>
<p>On the other hand, fine-tuned models are specifically tailored to well-defined tasks and may struggle to adapt to new or unexpected user requests. They rely heavily on clear objectives and well-formed training data that specify the types of instructions the models should learn to follow. These fine-tuned models may face challenges with noisy input due to their narrower focus on specific distributions and structured data.</p>
<p>In addition to considering real-world data, there are other factors that need to be taken into account, particularly the safety and privacy of user data. Since the present LLM giants are cloud-based, user data is communicated over the internet. This can pose serious security risks, especially when processing sensitive or confidential data with cloud giants. Therefore, before considering factors like cost, latency, robustness, or bias, it is essential to prioritize user privacy and ensure appropriate safeguards are in place.</p>
</section>
</section>
<section id="discussions-on-privacy" class="level1">
<h1>Discussions on Privacy</h1>
<section id="understanding-privacy" class="level2">
<h2 class="anchored" data-anchor-id="understanding-privacy">Understanding Privacy</h2>
<p>Before we delve into privacy concerns related to language models, let’s first understand what privacy means. According to Alan Estin, privacy is about individuals, groups, or institutions having control over how, when, and to what extent their information is shared with others. In the context of language models, there are significant digital privacy concerns.</p>
</section>
<section id="historical-privacy-measures" class="level2">
<h2 class="anchored" data-anchor-id="historical-privacy-measures">Historical Privacy Measures</h2>
<p>In the past, privacy concerns were addressed through techniques like anonymity and encryption. Anonymity involves keeping personal or identifiable information separate from data to ensure that individuals’ identities are not linked to the data they generate. Encryption converts information into a coded form that can only be accessed by authorized parties. These measures aimed to protect privacy and limit access to user information.</p>
</section>
<section id="limitations-in-protecting-privacy" class="level2">
<h2 class="anchored" data-anchor-id="limitations-in-protecting-privacy">Limitations in Protecting Privacy</h2>
<p>However, these approaches are proving insufficient, especially when it comes to training machine learning models or language models. It is crucial that these models do not expose any private information from the training dataset. This has led to research on differential privacy algorithms.</p>
</section>
<section id="differential-privacy" class="level2">
<h2 class="anchored" data-anchor-id="differential-privacy">Differential Privacy</h2>
<p>Differential privacy is a rigorous mathematical framework that can be applied to any algorithm. It has been successfully implemented by major companies in their data pipelines. In this section, we will explain the concept of differential privacy without delving into the mathematical details.</p>
</section>
<section id="privacy-attacks-and-privacy-loss" class="level2">
<h2 class="anchored" data-anchor-id="privacy-attacks-and-privacy-loss">Privacy Attacks and Privacy Loss</h2>
<p>Unlike encryption or anonymization, differential privacy focuses on preventing privacy attacks. Privacy attacks occur when an entity or individual tries to gain access to private information by exploiting the behavior or output of a language model. Differential privacy addresses the concept of privacy leakage or privacy loss.</p>
</section>
<section id="key-concepts-in-differential-privacy" class="level2">
<h2 class="anchored" data-anchor-id="key-concepts-in-differential-privacy">Key Concepts in Differential Privacy</h2>
<ul>
<li><p><strong>Privacy Parameters</strong>: The level of privacy protection is controlled by a parameter called epsilon (<img src="https://latex.codecogs.com/png.latex?%5Cepsilon">). A smaller <img src="https://latex.codecogs.com/png.latex?%5Cepsilon"> value provides stronger privacy guarantees.</p></li>
<li><p><strong>Sensitivity</strong>: Sensitivity of a mechanism refers to how much the output can change when a single example is added or removed from the dataset. Sensitivity helps determine the amount of noise that needs to be added to achieve the desired privacy level.</p></li>
<li><p><strong>Privacy Compromise</strong>: To address potential privacy compromises, (<img src="https://latex.codecogs.com/png.latex?%5Cepsilon,%20%5Cdelta">)-differential privacy is used, where <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> represents the probability of privacy compromise.</p></li>
</ul>
</section>
<section id="challenges-and-variations" class="level2">
<h2 class="anchored" data-anchor-id="challenges-and-variations">Challenges and Variations</h2>
<ul>
<li><p><strong>Privacy Loss Variance</strong>: Privacy loss variance means that different individuals may experience different levels of privacy loss.</p></li>
<li><p><strong>Differential Privacy Extensions</strong>: In the field of research, there are more than 500 extensions of differential privacy available in literature, focusing on different scenarios, types of data, and attacker models.</p></li>
<li><p><strong>External Factors</strong>: In some cases, privacy can be compromised by external factors beyond the mechanism’s control.</p></li>
<li><p><strong>Alternative Approaches</strong>: There are alternative statistical approaches, like hypothesis testing, that can be used to interpret differential privacy.</p></li>
</ul>
</section>
<section id="applying-differential-privacy-in-data-processing" class="level2">
<h2 class="anchored" data-anchor-id="applying-differential-privacy-in-data-processing">Applying Differential Privacy in Data Processing</h2>
<ul>
<li><p><strong>Data Preprocessing</strong>: Data preprocessing involves applying differential privacy to datasets before training the model, which helps protect sensitive information.</p></li>
<li><p><strong>Optimization Algorithm</strong>: Using differential privacy during the training process of the model’s parameters ensures privacy is maintained while learning from the data.</p></li>
<li><p><strong>Loss Function</strong>: Applying differential privacy to the result of the loss function just before updating the model’s parameters helps control privacy loss and maintain accuracy.</p></li>
<li><p><strong>Final Trained Parameters</strong>: Differential privacy can also be applied to the final trained parameters of the model, ensuring privacy even when the model is in use.</p></li>
</ul>
</section>
<section id="privacy-in-stochastic-gradient-descent" class="level2">
<h2 class="anchored" data-anchor-id="privacy-in-stochastic-gradient-descent">Privacy in Stochastic Gradient Descent</h2>
<p>In deep learning, stochastic gradient descent (SGD) is used to train language models. It involves adding noise to the gradients during training to protect the privacy of the model parameters. This ensures that the model parameters do not reveal any private information.</p>
</section>
<section id="the-pate-algorithm" class="level2">
<h2 class="anchored" data-anchor-id="the-pate-algorithm">The PATE Algorithm</h2>
<p>The PATE algorithm takes a different approach to ensure privacy. It allows a public model to learn by combining the predictions of multiple models with added noise. This creates a public dataset with differentially private labels, which are used to train a differentially private model. This approach resembles synthetic data generation and provides a way to avoid leaking private data during data processing.</p>
</section>
<section id="local-differential-privacy-and-federated-learning" class="level2">
<h2 class="anchored" data-anchor-id="local-differential-privacy-and-federated-learning">Local Differential Privacy and Federated Learning</h2>
<p>In some cases, it may not be necessary to interact with a cloud server to work with a dataset. This is where “Local” differential privacy can be useful. It provides a stronger privacy guarantee for individual users by using a version of the data that doesn’t store the original sensitive information. Federated Learning is introduced to handle the variability of different input data received by the server.</p>
<section id="centralized-federated-learning" class="level3">
<h3 class="anchored" data-anchor-id="centralized-federated-learning">Centralized Federated Learning</h3>
<p>Centralized Federated Learning involves a central server that coordinates the participating nodes to create a global model. Privacy is maintained by only sharing local models with a trusted aggregator.</p>
</section>
<section id="decentralized-federated-learning" class="level3">
<h3 class="anchored" data-anchor-id="decentralized-federated-learning">Decentralized Federated Learning</h3>
<p>Decentralized Federated Learning eliminates the central server, resulting in no single point of failure. However, it presents challenges in coordinating the learning process and network performance.</p>
</section>
<section id="heterogeneous-federated-learning" class="level3">
<h3 class="anchored" data-anchor-id="heterogeneous-federated-learning">Heterogeneous Federated Learning</h3>
<p>Heterogeneous Federated Learning allows for flexibility without making assumptions about data, devices, collaborative schemes, or models used. It requires careful optimization and coordination.</p>
</section>
</section>
</section>
<section id="further-discussions" class="level1">
<h1>Further Discussions</h1>
<section id="challenges-and-improvements-in-large-language-models-llms" class="level2">
<h2 class="anchored" data-anchor-id="challenges-and-improvements-in-large-language-models-llms">Challenges and Improvements in Large Language Models (LLMs)</h2>
<p>Large language models (LLMs) have made remarkable strides in natural language processing, yet addressing various shortcomings is crucial for their further advancement and practical application. Future research should focus on the following areas:</p>
<section id="addressing-bias-and-fairness" class="level3">
<h3 class="anchored" data-anchor-id="addressing-bias-and-fairness">Addressing Bias and Fairness</h3>
<ul>
<li><strong>Bias Mitigation</strong>: LLMs can perpetuate biases from training data, resulting in unfair and discriminatory outcomes. Future research should focus on developing debiasing techniques and meticulous dataset curation to ensure fairness.</li>
</ul>
</section>
<section id="enhancing-robustness" class="level3">
<h3 class="anchored" data-anchor-id="enhancing-robustness">Enhancing Robustness</h3>
<ul>
<li><strong>Handling Noisy Data</strong>: LLMs often struggle with noisy or out-of-distribution data, leading to erroneous or nonsensical outputs. Enhancing their robustness is imperative to handle diverse scenarios encountered in real-world applications. Researchers should explore techniques that improve model generalization and adaptability.</li>
</ul>
</section>
<section id="improving-explainability" class="level3">
<h3 class="anchored" data-anchor-id="improving-explainability">Improving Explainability</h3>
<ul>
<li><strong>Enhancing Interpretability</strong>: The lack of explainability and interpretability makes LLMs appear as black boxes, hindering the understanding of their reasoning behind predictions. To enhance trustworthiness, methods need to be developed to make LLMs more explainable, allowing users to comprehend the decision-making process.</li>
</ul>
</section>
<section id="data-efficiency" class="level3">
<h3 class="anchored" data-anchor-id="data-efficiency">Data Efficiency</h3>
<ul>
<li><strong>Data-Efficient Models</strong>: LLMs typically rely on vast amounts of training data, which restricts their usability in domains with limited labeled data. It is crucial to investigate methods that improve data efficiency, enabling LLMs to perform well even with fewer training examples.</li>
</ul>
</section>
</section>
<section id="potential-applications-of-llms" class="level2">
<h2 class="anchored" data-anchor-id="potential-applications-of-llms">Potential Applications of LLMs</h2>
<p>LLMs have a wide range of potential applications in various domains. They can be utilized in the following ways:</p>
<section id="customer-support-and-chatbots" class="level3">
<h3 class="anchored" data-anchor-id="customer-support-and-chatbots">Customer Support and Chatbots</h3>
<ul>
<li>Creating intelligent bots capable of accurately understanding and responding to user queries, thereby improving customer interactions.</li>
</ul>
</section>
<section id="content-generation" class="level3">
<h3 class="anchored" data-anchor-id="content-generation">Content Generation</h3>
<ul>
<li>Automating content generation tasks, generating high-quality articles, blog posts, and product descriptions, benefiting content creators, marketers, and businesses.</li>
</ul>
</section>
<section id="language-translation" class="level3">
<h3 class="anchored" data-anchor-id="language-translation">Language Translation</h3>
<ul>
<li>Enhancing language translation systems, enabling more contextually accurate translations and breaking down language barriers.</li>
</ul>
</section>
<section id="improved-search-engines" class="level3">
<h3 class="anchored" data-anchor-id="improved-search-engines">Improved Search Engines</h3>
<ul>
<li>Enhancing the effectiveness of search engines by better comprehending user queries and offering more relevant search results, thereby enhancing the overall search experience.</li>
</ul>
<p>It is crucial to carefully address factors like privacy, data protection, and ethical considerations when implementing LLMs in real-life applications, ensuring the development of valuable and user-friendly solutions.</p>
</section>
</section>
<section id="challenges-in-upscaling-data-for-llms" class="level2">
<h2 class="anchored" data-anchor-id="challenges-in-upscaling-data-for-llms">Challenges in Upscaling Data for LLMs</h2>
<p>Upscaling data for training Language Models (LLMs) presents various challenges. Researchers should explore techniques to address the following issues:</p>
<section id="computational-resources" class="level3">
<h3 class="anchored" data-anchor-id="computational-resources">Computational Resources</h3>
<ul>
<li>Handling the significant computational resources encompassing storage and processing power required to upscale data for training LLMs.</li>
</ul>
</section>
<section id="data-quality-and-labeling" class="level3">
<h3 class="anchored" data-anchor-id="data-quality-and-labeling">Data Quality and Labeling</h3>
<ul>
<li>Ensuring data quality and labeling becomes more complex when upscaling data, demanding meticulous quality control and annotation procedures to maintain accuracy and consistency.</li>
</ul>
</section>
<section id="training-time" class="level3">
<h3 class="anchored" data-anchor-id="training-time">Training Time</h3>
<ul>
<li>Prolonging the training time for LLMs when upscaling data, potentially impacting productivity and causing delays in research and development cycles.</li>
</ul>
</section>
<section id="overfitting" class="level3">
<h3 class="anchored" data-anchor-id="overfitting">Overfitting</h3>
<ul>
<li>The risk of overfitting the model to the training data when upscaling, resulting in poor generalization to new and unseen examples.</li>
</ul>
<p>Researchers should explore techniques like distributed training, efficient data storage and processing frameworks, and automated quality assurance processes to ensure the scalability and reliability of upscaling data.</p>
</section>
</section>
<section id="failure-cases-in-differential-privacy" class="level2">
<h2 class="anchored" data-anchor-id="failure-cases-in-differential-privacy">Failure Cases in Differential Privacy</h2>
<p>While differential privacy is a valuable technique for safeguarding individuals’ data privacy, it may fall short in certain scenarios. Researchers should address the following failure cases:</p>
<section id="correlation-attacks" class="level3">
<h3 class="anchored" data-anchor-id="correlation-attacks">Correlation Attacks</h3>
<ul>
<li>When adversaries exploit correlations between multiple queries or released data points to unveil sensitive information, differential privacy mechanisms may not adequately protect against such attacks without accounting for correlations appropriately.</li>
</ul>
</section>
<section id="adversarial-use-of-auxiliary-information" class="level3">
<h3 class="anchored" data-anchor-id="adversarial-use-of-auxiliary-information">Adversarial Use of Auxiliary Information</h3>
<ul>
<li>Adversaries with access to auxiliary information can combine it with differentially private outputs to breach privacy, as differential privacy mechanisms do not safeguard against inferences made from external sources.</li>
</ul>
</section>
<section id="insider-attacks" class="level3">
<h3 class="anchored" data-anchor-id="insider-attacks">Insider Attacks</h3>
<ul>
<li>The assumption of a trusted data curator in differential privacy leaves room for insider attacks, where privacy guarantees can be violated if the curator is malicious or colludes with attackers.</li>
</ul>
</section>
<section id="re-identification-attacks" class="level3">
<h3 class="anchored" data-anchor-id="re-identification-attacks">Re-Identification Attacks</h3>
<ul>
<li>Adversaries attempt to re-identify individuals in the dataset using background knowledge or external datasets, posing a threat to privacy. Differential privacy mechanisms may not provide sufficient protection against such attacks, especially when the dataset is sparse or contains unique identifiers.</li>
</ul>
<p>Future research should prioritize the development of more robust differential privacy mechanisms, considering adversarial scenarios and exploring ways to incorporate additional privacy-preserving techniques.</p>
</section>
</section>
<section id="open-ended-questions" class="level2">
<h2 class="anchored" data-anchor-id="open-ended-questions">Open-Ended Questions</h2>
<p>Here are some open-ended questions for the reader:</p>
<ol type="1">
<li><p>How can large language models be effectively utilized in domains with limited training data, considering the trade-off between model size and performance?</p></li>
<li><p>What potential ethical implications arise from deploying large language models in real-world applications, and how can we ensure their responsible use?</p></li>
<li><p>What measures should be taken to mitigate biases and ensure fairness in language models, considering their impact on decision-making processes?</p></li>
<li><p>How can we strike a balance between privacy and utility in language models, given the growing concerns about data protection and the need for accurate results?</p></li>
<li><p>What potential risks and challenges are associated with upscaling data for training language models, and how can they be mitigated to ensure efficient and reliable model performance?</p></li>
</ol>


</section>
</section>

 ]]></description>
  <category>LLM</category>
  <category>Privacy</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/survey_on_llm_privacy.html</guid>
  <pubDate>Thu, 19 Oct 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Pycon India 2023 Trip Report</title>
  <dc:creator>Devesh Paragiri</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/pycon_trip_report.html</link>
  <description><![CDATA[ 




<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/pycon.webp" class="img-fluid"></p>
<p>This year’s python conference was held at a university from 29th September to 2nd October in Hyderabad with around 1000 attendees flocking to the scene across a span of four days. The conference’s theme was mainly focused towards Generative AI relate topics and the open-source network.</p>
<p>In this blog, I will distill the most important takeaways from the conference — latest developments, emerging fields and industries, and cool resources.</p>
<section id="key-highlights" class="level2">
<h2 class="anchored" data-anchor-id="key-highlights">Key highlights</h2>
<p><em>Keynotes, talks, and workshops</em></p>
<p>The keynote speakers for the conference were <a href="https://www.linkedin.com/in/jessica0greene/">Jessica Greene</a>, <a href="https://www.linkedin.com/in/marcelotryle/">Marcelo Trylesinski</a>, <a href="https://www.linkedin.com/in/rushabhmehta1/">Rushabh Mehta</a>, <a href="https://www.linkedin.com/in/marcelotryle/">Cheuk Ting Ho</a>, and <a href="https://www.linkedin.com/in/shaileshk/">Shailesh Kumar</a>. The keynotes were mostly about getting involved with open-source projects, transitioning into tech, and web frameworks.</p>
<section id="open-source-and-getting-into-tech" class="level3">
<h3 class="anchored" data-anchor-id="open-source-and-getting-into-tech">Open-source and getting into tech</h3>
<p><a href="https://www.linkedin.com/in/jessica0greene/">Jessica Greene’s</a> keynote highlighted her journey of getting into the tech industry and the pivotal role the open-source community played in keeping her motivated throughout her transition. In addition to this transition (from a very different educational background), she highlighted the extra challenges she faced solely because she was a woman — lack of representation, biased narratives, and a heightened feeling of the imposter syndrome.</p>
<p>Her talk was very inspiring and provided constructive ways to overcoming these challenges — joining a (preferably women-led) tech community. Jessica, personally, found her ground with the <a href="https://berlin.pyladies.com/">PyLadies Berlin</a> community and recently joined the <a href="https://www.python.org/psf-landing/">Python Software Foundation</a> to help support the global community. If you are a woman in tech or aspiring to be one, I highly recommend these <a href="https://careerfoundry.com/en/blog/career-change/resources-empower-women-in-tech/">resources</a>.</p>
<p>On a similar note, Cheuk Ting Ho’s talk focused on how one can get started with contributing to open-source libraries, the benefits, as well as overcoming some of the challenges one might face. She is also a part of the Python Software Foundation and advocates heavily for diversity among the board members to accurately represent the larger Python global community.</p>
<p><strong><em>TL;DR: Benefits of open-source community, PyLadies for women getting into tech, contribution benefits, open-source security (digital signing), raising issues and solving bugs.</em></strong></p>
</section>
<section id="all-about-frameworks" class="level3">
<h3 class="anchored" data-anchor-id="all-about-frameworks">All about frameworks</h3>
<p><a href="https://www.linkedin.com/in/marcelotryle/">Marcelo Trylesinski</a> gave an insightful keynote about the FastAPI framework and its benefits when compared to other frameworks (Flask, Django).</p>
<p>FastAPI is the way to go if your focus is to get started quickly and handle <strong>high volume requests </strong>(has async support). FastAPI has amazing integration with popular libraries for DB access and support for handling authentication. If you are currently working with Flask based applications, it would be a good idea to shift to FastAPI for faster response times (ASGI server capabilities).</p>
<p>The other cool framework for you to check out is <a href="https://frappeframework.com/">Frappe</a>. It’s a low-code framework customized for developing business applications. It is an <strong>integrated</strong> framework which makes it very easy to connect with payment gateways, SMS providers, cloud services, and other popular third-party tools. <a href="https://www.linkedin.com/in/rushabhmehta1/">Rushabh Mehta</a> (founder and CEO of Frappe), in his keynote gave a comprehensive list of applications <strong>(ERP based) </strong>that could be made with Frappe. He has created <a href="https://erpnext.com/">ERPNext</a>, a free and open-source cloud ERP software which works best for accounting, inventory management, supply chain management, retail, human resources, and more.</p>
<p><strong><em>TL;DR: FastAPI is better for high volume — low latency, good integration choices; Frappe for low-code approach, tailored for ERP based use cases.</em></strong></p>
</section>
<section id="python-gen-a.i" class="level3">
<h3 class="anchored" data-anchor-id="python-gen-a.i">Python 🤝 Gen A.I</h3>
<p>With Python’s versatility and large network of libraries, it is the perfect choice for ML/AI based applications. With generative AI taking the internet by storm, it was no surprise to come across multiple talks, workshops and networking sessions that addressed the topic.</p>
<p>One such <a href="https://docs.google.com/presentation/d/153cGX9dHrm5DD_PYmeIq7CAX-AtVoqoq/edit#slide=id.p17">workshop</a> gave great insight on building robust Retrieval Augmented Generation (RAG) systems. The current market for inference on documents with the help of LLMs is growing rapidly with multiple companies making use of these applications. The basics for building a good RAG system is quality extraction of data from documents, fine-tuning the hyper parameters, and using the right embeddings model.</p>
<p>Some <strong>key questions</strong> for you to consider before building a RAG system include the type of task you want it to perform (summarization, document comparison, semantic search, recency filtering, masking PII information, etc.), what type of benchmarks you need it to pass, and how you are going to check for quality/accuracy of the response.</p>
<p>In most cases, we would have to make use of query routers, either to make two retrieval calls for document comparison, or routing the retrieval call between a SQL DB and a vector DB based on the nature of query and type of data to be retrieved (structured/unstructured). We can make use of frameworks such as LangChain or LLaMAIndex for developing quick PoCs. Check out <a href="https://community.openai.com/t/llamaindex-vs-langchain-which-one-should-be-used/163139">this resource</a> if you are unsure on which framework to use. If you want to know more about efficient scaling of these systems, check out <a href="https://docs.google.com/presentation/d/1xmXqStTH7ORoz7tZ0JG6u23wI8C5GGxSG1khe_cDbsc/edit#slide=id.g25a96073e3f_0_1070">this resource</a> (Cross encoders, re-rankers, fast text search, improving reliability, etc).</p>
<p>The other major aspect which garnered considerable attention is that of cost and the future of generative AI. Various keynote speakers who work in the industry highlighted the pitfalls of currently available and mainstream LLMs — sub optimally trained, blackbox nature, security concerns. People seemed to have a broad opinion that LLMs with 100B+ parameters would rarely be useful in real-world applications since the tasks are relatively well-defined and discrete (Example: Most companies don’t want their LLMs to write poems about John Cena and also be able to analyze their financial statements). The future of generative AI seems to be moving towards smaller parameter LLMs with a keen focus on high quality data and compute optimization to enable on-device capabilities for maximum outreach.</p>
<p><strong><em>TL;DR: Building and refining Retrieval Augmented Generation (RAG) systems; Future of gen AI — smaller parameter LLMs with focus on high-quality data and compute optimization.</em></strong></p>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>Overall, the conference was an amazing experience which gave insights into various domains, what developers are working on, future of multiple technology related sectors, and the cool ways companies are solving pressing real-world problems.</p>
<p><em>To watch the recorded stream of keynotes click <a href="https://www.youtube.com/watch?v=EtglvudUZZI">here</a>.</em></p>
<p><em>To look at the talk proposals click <a href="https://in.pycon.org/cfp/pycon-india-2023/proposals/">here</a>.</em></p>


</section>

 ]]></description>
  <category>conferences</category>
  <category>insights</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/pycon_trip_report.html</guid>
  <pubDate>Mon, 11 Sep 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Unveiling the Power and Privacy of Language Models in Fashion</title>
  <dc:creator>Harshvardhan </dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/unveiling-power-and-privacy.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_In_the_world_of_fashion_language_models_have_become_the__d94d4e64-a53f-4fe4-8765-2286673ffd8b.png" class="img-fluid figure-img"></p>
<figcaption>in the world of fashion</figcaption>
</figure>
</div>
<section id="understanding-language-models" class="level2">
<h2 class="anchored" data-anchor-id="understanding-language-models">Understanding Language Models</h2>
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_specialists_vs._generalists_fashion_models_4e00bcac-6211-45f4-a6dd-1f9a8aa9751c.png" class="img-fluid" alt="Understanding Language Models"> Language models come in two flavours: LLMs and fine-tuned models. LLMs are big models trained on diverse data without specific adjustments for a particular task. On the other hand, fine-tuned models are smaller models tailored to a specific task. Fine-tuned models are like specialists, while LLMs are more like generalists. In the fashion world, the choice between LLMs and fine-tuned models depends on the specific requirements of the task at hand.</p>
</section>
<section id="practical-applications-in-fashion" class="level2">
<h2 class="anchored" data-anchor-id="practical-applications-in-fashion">Practical Applications in Fashion</h2>
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_Language_models_have_found_their_way_into_various_fashio_e9b79e1f-d951-4e9c-b81f-9cd2fd6d1cc5.png" class="img-fluid" alt="language models found their way into applications"> Language models have found their way into various fashion applications. They excel in natural language understanding, enabling them to comprehend fashion-related text and extract meaningful insights. Language models can also generate high-quality fashion content, such as writing articles, creating engaging social media posts, or assisting in chatbot interactions. Moreover, these models possess extensive knowledge about fashion trends and can assist in knowledge-intensive fashion tasks. Additionally, language models enhance reasoning abilities, helping in decision-making and problem-solving within the fashion industry.</p>
</section>
<section id="federated-learning-and-privacy" class="level2">
<h2 class="anchored" data-anchor-id="federated-learning-and-privacy">Federated Learning and Privacy</h2>
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_To_address_privacy_concerns_federated_learning_offers_a__ca6b345e-eb53-4fb3-9bdb-c54552a5f050.png" class="img-fluid" alt="federated learning and privacy"> To address privacy concerns, federated learning offers a distributed approach where models are trained locally and aggregated to create a global model. This method allows fashion companies to utilise data from multiple sources while preserving user privacy. Different approaches, such as centralised, decentralised, and heterogeneous federated learning, provide distinct benefits and challenges. By applying techniques like differential privacy, fashion industry researchers can strike a balance between utility and privacy, ensuring that language models preserve the confidentiality of sensitive fashion-related information.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_Language_models_have_become_a_game-changer_in_the_fashio_324010e1-a0c2-43b6-bea9-1df8d11071fb.png" class="img-fluid" alt="conclusion"> Language models have become a game-changer in the fashion industry. Their ability to understand and generate human-like language opens up a world of possibilities for fashion-related tasks. With advancements in privacy techniques like differential privacy and federated learning, language models can protect the privacy of user data while providing accurate and valuable insights. As the fashion industry embraces these technologies, we can expect further advancements in fashion content creation, trend analysis, and personalised fashion recommendations.</p>


</section>

 ]]></description>
  <category>LLM</category>
  <category>Privacy</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/unveiling-power-and-privacy.html</guid>
  <pubDate>Sun, 27 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Hushh Manifesto</title>
  <dc:creator>Manish Sainani, Justin Donaldson, Sunaz Sharaf</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/manifesto.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_A_scientist_writing_a_set_of_core_principles_for_an_AI_07bc5c5e-e3d4-447a-80e3-8401f4767591.png" class="img-fluid figure-img"></p>
<figcaption>Hushh Principles</figcaption>
</figure>
</div>
<section id="hushh---redefining-access-control-intelligence-and-monetization" class="level1">
<h1>Hushh - Redefining Access, Control, Intelligence, and Monetization</h1>
<p>At Hushh, we believe in building a startup that empowers individuals by redefining the principles of Access, Control, Intelligence, and Monetization. Our platform aims to revolutionize the way people interact, share, and derive value from their data, ensuring their privacy, choice, and ability to create value. This manifesto outlines the core principles that drive our mission and guide our actions, and a demonstration of documentation by github.</p>
<section id="access" class="level2">
<h2 class="anchored" data-anchor-id="access">Access:</h2>
<p>We believe that access to information and resources should be inclusive, equitable, and easily attainable for everyone. Hushh aims to break down barriers and provide equal opportunities to all individuals, regardless of their background, location, or socio-economic status. Through our platform, we strive to create an ecosystem that fosters open communication, collaboration, and shared knowledge.</p>
</section>
<section id="control-choice" class="level2">
<h2 class="anchored" data-anchor-id="control-choice">Control (Choice):</h2>
<p>We recognize that individuals should have complete control over their personal data and online presence. At Hushh, we prioritize privacy and provide users with the tools to make informed decisions about the information they share and how it is used. We respect the autonomy and agency of our users, empowering them to define their own digital experiences and safeguard their personal information.</p>
</section>
<section id="intelligence" class="level2">
<h2 class="anchored" data-anchor-id="intelligence">Intelligence :</h2>
<p>We believe that intelligence is the foundation of progress and growth. At Hushh, we leverage cutting-edge technologies, such as artificial intelligence and machine learning, to provide intelligent insights and personalized experiences. Our platform understands user preferences, adapts to their needs, and continuously learns to enhance the overall user experience. We harness the power of intelligence to empower individuals and help them make better decisions in their personal and professional lives.</p>
</section>
<section id="monetization-value-creation-for-the-user-of-the-platform" class="level2">
<h2 class="anchored" data-anchor-id="monetization-value-creation-for-the-user-of-the-platform">Monetization (Value Creation for the User of the Platform):</h2>
<p>We understand the importance of value creation for our users. Hushh is committed to creating a sustainable ecosystem that enables individuals to monetize their skills, knowledge, and creations. We provide tools and opportunities for users to showcase their expertise, connect with like-minded individuals, and explore avenues for financial growth. Through our platform, users can unlock their full potential and realize the value they bring to the digital world.</p>
<p>Together, we envision a future where access is universal, control is in the hands of individuals, intelligence is seamlessly integrated, and monetization is fair and rewarding. At Hushh, we are dedicated to building a community-driven platform that challenges existing norms, fosters innovation, and empowers individuals to thrive in the digital age. Join us on this transformative journey as we shape a world where everyone’s voice is heard, respected, and valued. Together, we can build a future that embraces the true potential of technology and human ingenuity.</p>


</section>
</section>

 ]]></description>
  <category>mission</category>
  <category>principles</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/manifesto.html</guid>
  <pubDate>Tue, 11 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Logo Analysis for Brand Affinity</title>
  <dc:creator>Justin Donaldson</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/logo_analysis.html</link>
  <description><![CDATA[ 




<section id="understanding-customer-preferences-with-hushhs-computer-vision-platform" class="level1">
<h1>Understanding Customer Preferences with Hushh’s Computer Vision Platform</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/logos.png" class="img-fluid figure-img"></p>
<figcaption>Logo Analysis</figcaption>
</figure>
</div>
<p>In today’s digital age, retailers are constantly seeking innovative ways to better understand their customers and build brand affinity. One powerful tool that is revolutionizing the retail industry is Hushh, a customer wallet platform that utilizes machine learning to analyze personal images and identify brand logos. By leveraging the power of computer vision and deep learning algorithms, Hushh provides retailers with valuable insights into customer preferences and behavior.</p>
<section id="how-does-hushh-logo-analysis-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-hushh-logo-analysis-work">How Does Hushh Logo Analysis Work?</h2>
<p>Hushh’s computer vision platform uses a combination of deep learning and computer vision techniques to identify logos in personal images. Whether it’s a logo on clothing, accessories, or products, Hushh can detect and analyze it. Once the logo is identified, the platform then determines the brand associated with it.</p>
</section>
<section id="capturing-brand-preference-over-time" class="level2">
<h2 class="anchored" data-anchor-id="capturing-brand-preference-over-time">Capturing Brand Preference Over Time</h2>
<p>One of the key features of Hushh is its ability to track customer preferences over time. By analyzing personal images and customer sentiment, the platform provides retailers with valuable insights into how customer preferences evolve. This information is crucial for retailers to tailor their marketing strategies and offerings accordingly.</p>
<p>Brands are a powerful way for users to express their personal preferences publicly. By capturing brand preference over time, retailers can gain a deeper and more immediate insight into what a customer is interested in when they arrive at the store.</p>
<p>Hushh is working on novel information displays to express customer brand preference. The following widget shows a force directed bubble plot of a customer’s favorite brands, sized according to how often that brand appears in their personal images. The widget below is fully interactive, enabling intuitive browsing of brands and brand categories.</p>
<iframe width="780" h<iframe="" height="684" frameborder="0" src="https://observablehq.com/embed/b75d89ea5cb1eccb?cells=chart">
<div id="quarto-navigation-envelope" class="hidden">
<p><span class="hidden" data-render-id="quarto-int-sidebar-title">Hushh Labs</span> <span class="hidden" data-render-id="quarto-int-navbar-title">Hushh Labs</span> <span class="hidden" data-render-id="quarto-int-navbar:Home">Home</span> <span class="hidden" data-render-id="quarto-int-navbar:/index.html">/index.html</span> <span class="hidden" data-render-id="quarto-int-navbar:About">About</span> <span class="hidden" data-render-id="quarto-int-navbar:/about.html">/about.html</span> <span class="hidden" data-render-id="quarto-int-navbar:/index.xml">/index.xml</span></p>
<div class="hidden" data-render-id="margin-header">
<div class="margin-header-item">
<div id="mc_embed_shell">
      <link href="//cdn-images.mailchimp.com/embedcode/classic-061523.css" rel="stylesheet" type="text/css">
  <style type="text/css">
        #mc_embed_signup{background:#fff; false;clear:left; font:14px Helvetica,Arial,sans-serif; width: 240px;}
        /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
           We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
    <form action="https://gitlab.us9.list-manage.com/subscribe/post?u=8054dab5be75ddd007416b5b9&amp;id=5647e13f15&amp;f_id=0066dfe0f0" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank">
        <div id="mc_embed_signup_scroll"><h2>Subscribe to Hushh Labs</h2>
            <div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
            <div class="mc-field-group"><label for="mce-FNAME">First Name </label><input type="text" name="FNAME" class=" text" id="mce-FNAME" value=""></div><div class="mc-field-group"><label for="mce-EMAIL">Email Address <span class="asterisk">*</span></label><input type="email" name="EMAIL" class="required email" id="mce-EMAIL" required="" value=""></div>
        <div id="mce-responses" class="clear foot">
            <div class="response" id="mce-error-response" style="display: none;"></div>
            <div class="response" id="mce-success-response" style="display: none;"></div>
        </div>
    <div aria-hidden="true" style="position: absolute; left: -5000px;">
        /* real people should not fill this in and expect good things - do not remove this or risk form bot signups */
        <input type="text" name="b_8054dab5be75ddd007416b5b9_5647e13f15" tabindex="-1" value="">
    </div>
        <div class="optionalParent">
            <div class="clear foot">
                <input type="submit" name="subscribe" id="mc-embedded-subscribe" class="button" value="Subscribe">
            </div>
        </div>
    </div>
</form>
</div>
<script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script><script type="text/javascript">(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[1]=FNAME;ftypes[1]=merge;,fnames[0]=EMAIL;ftypes[0]=merge;,fnames[2]=LNAME;ftypes[2]=merge;,fnames[3]=ADDRESS;ftypes[3]=merge;,fnames[4]=PHONE;ftypes[4]=merge;,fnames[5]=BIRTHDAY;ftypes[5]=merge;false}(jQuery));var $mcj = jQuery.noConflict(true);</script></div>

</div>
</div>
</div>
<div id="quarto-meta-markdown" class="hidden">
<p><span class="hidden" data-render-id="quarto-metatitle">Hushh Labs - Logo Analysis for Brand Affinity</span> <span class="hidden" data-render-id="quarto-twittercardtitle">Hushh Labs - Logo Analysis for Brand Affinity</span> <span class="hidden" data-render-id="quarto-ogcardtitle">Hushh Labs - Logo Analysis for Brand Affinity</span> <span class="hidden" data-render-id="quarto-metasitename">Hushh Labs</span> <span class="hidden" data-render-id="quarto-twittercarddesc">Customers regularly express preferences for brands based on their attire. How can retail adapt and learn without compromising privacy?</span> <span class="hidden" data-render-id="quarto-ogcardddesc">Customers regularly express preferences for brands based on their attire. How can retail adapt and learn without compromising privacy?</span></p>
</div>
</section>
</section>

</main> <!-- /main -->
<script id = "quarto-html-after-body" type="application/javascript">
window.document.addEventListener("DOMContentLoaded", function (event) {
  const toggleBodyColorMode = (bsSheetEl) => {
    const mode = bsSheetEl.getAttribute("data-mode");
    const bodyEl = window.document.querySelector("body");
    if (mode === "dark") {
      bodyEl.classList.add("quarto-dark");
      bodyEl.classList.remove("quarto-light");
    } else {
      bodyEl.classList.add("quarto-light");
      bodyEl.classList.remove("quarto-dark");
    }
  }
  const toggleBodyColorPrimary = () => {
    const bsSheetEl = window.document.querySelector("link#quarto-bootstrap");
    if (bsSheetEl) {
      toggleBodyColorMode(bsSheetEl);
    }
  }
  toggleBodyColorPrimary();  
  const icon = "";
  const anchorJS = new window.AnchorJS();
  anchorJS.options = {
    placement: 'right',
    icon: icon
  };
  anchorJS.add('.anchored');
  const isCodeAnnotation = (el) => {
    for (const clz of el.classList) {
      if (clz.startsWith('code-annotation-')) {                     
        return true;
      }
    }
    return false;
  }
  const clipboard = new window.ClipboardJS('.code-copy-button', {
    text: function(trigger) {
      const codeEl = trigger.previousElementSibling.cloneNode(true);
      for (const childEl of codeEl.children) {
        if (isCodeAnnotation(childEl)) {
          childEl.remove();
        }
      }
      return codeEl.innerText;
    }
  });
  clipboard.on('success', function(e) {
    // button target
    const button = e.trigger;
    // don't keep focus
    button.blur();
    // flash "checked"
    button.classList.add('code-copy-button-checked');
    var currentTitle = button.getAttribute("title");
    button.setAttribute("title", "Copied!");
    let tooltip;
    if (window.bootstrap) {
      button.setAttribute("data-bs-toggle", "tooltip");
      button.setAttribute("data-bs-placement", "left");
      button.setAttribute("data-bs-title", "Copied!");
      tooltip = new bootstrap.Tooltip(button, 
        { trigger: "manual", 
          customClass: "code-copy-button-tooltip",
          offset: [0, -8]});
      tooltip.show();    
    }
    setTimeout(function() {
      if (tooltip) {
        tooltip.hide();
        button.removeAttribute("data-bs-title");
        button.removeAttribute("data-bs-toggle");
        button.removeAttribute("data-bs-placement");
      }
      button.setAttribute("title", currentTitle);
      button.classList.remove('code-copy-button-checked');
    }, 1000);
    // clear code selection
    e.clearSelection();
  });
  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {
    const config = {
      allowHTML: true,
      maxWidth: 500,
      delay: 100,
      arrow: false,
      appendTo: function(el) {
          return el.parentElement;
      },
      interactive: true,
      interactiveBorder: 10,
      theme: 'quarto',
      placement: 'bottom-start',
    };
    if (contentFn) {
      config.content = contentFn;
    }
    if (onTriggerFn) {
      config.onTrigger = onTriggerFn;
    }
    if (onUntriggerFn) {
      config.onUntrigger = onUntriggerFn;
    }
    window.tippy(el, config); 
  }
  const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
  for (var i=0; i<noterefs.length; i++) {
    const ref = noterefs[i];
    tippyHover(ref, function() {
      // use id or data attribute instead here
      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
      try { href = new URL(href).hash; } catch {}
      const id = href.replace(/^#\/?/, "");
      const note = window.document.getElementById(id);
      return note.innerHTML;
    });
  }
  const xrefs = window.document.querySelectorAll('a.quarto-xref');
  const processXRef = (id, note) => {
    // Strip column container classes
    const stripColumnClz = (el) => {
      el.classList.remove("page-full", "page-columns");
      if (el.children) {
        for (const child of el.children) {
          stripColumnClz(child);
        }
      }
    }
    stripColumnClz(note)
    if (id === null || id.startsWith('sec-')) {
      // Special case sections, only their first couple elements
      const container = document.createElement("div");
      if (note.children && note.children.length > 2) {
        container.appendChild(note.children[0].cloneNode(true));
        for (let i = 1; i < note.children.length; i++) {
          const child = note.children[i];
          if (child.tagName === "P" && child.innerText === "") {
            continue;
          } else {
            container.appendChild(child.cloneNode(true));
            break;
          }
        }
        if (window.Quarto?.typesetMath) {
          window.Quarto.typesetMath(container);
        }
        return container.innerHTML
      } else {
        if (window.Quarto?.typesetMath) {
          window.Quarto.typesetMath(note);
        }
        return note.innerHTML;
      }
    } else {
      // Remove any anchor links if they are present
      const anchorLink = note.querySelector('a.anchorjs-link');
      if (anchorLink) {
        anchorLink.remove();
      }
      if (window.Quarto?.typesetMath) {
        window.Quarto.typesetMath(note);
      }
      // TODO in 1.5, we should make sure this works without a callout special case
      if (note.classList.contains("callout")) {
        return note.outerHTML;
      } else {
        return note.innerHTML;
      }
    }
  }
  for (var i=0; i<xrefs.length; i++) {
    const xref = xrefs[i];
    tippyHover(xref, undefined, function(instance) {
      instance.disable();
      let url = xref.getAttribute('href');
      let hash = undefined; 
      if (url.startsWith('#')) {
        hash = url;
      } else {
        try { hash = new URL(url).hash; } catch {}
      }
      if (hash) {
        const id = hash.replace(/^#\/?/, "");
        const note = window.document.getElementById(id);
        if (note !== null) {
          try {
            const html = processXRef(id, note.cloneNode(true));
            instance.setContent(html);
          } finally {
            instance.enable();
            instance.show();
          }
        } else {
          // See if we can fetch this
          fetch(url.split('#')[0])
          .then(res => res.text())
          .then(html => {
            const parser = new DOMParser();
            const htmlDoc = parser.parseFromString(html, "text/html");
            const note = htmlDoc.getElementById(id);
            if (note !== null) {
              const html = processXRef(id, note);
              instance.setContent(html);
            } 
          }).finally(() => {
            instance.enable();
            instance.show();
          });
        }
      } else {
        // See if we can fetch a full url (with no hash to target)
        // This is a special case and we should probably do some content thinning / targeting
        fetch(url)
        .then(res => res.text())
        .then(html => {
          const parser = new DOMParser();
          const htmlDoc = parser.parseFromString(html, "text/html");
          const note = htmlDoc.querySelector('main.content');
          if (note !== null) {
            // This should only happen for chapter cross references
            // (since there is no id in the URL)
            // remove the first header
            if (note.children.length > 0 && note.children[0].tagName === "HEADER") {
              note.children[0].remove();
            }
            const html = processXRef(null, note);
            instance.setContent(html);
          } 
        }).finally(() => {
          instance.enable();
          instance.show();
        });
      }
    }, function(instance) {
    });
  }
      let selectedAnnoteEl;
      const selectorForAnnotation = ( cell, annotation) => {
        let cellAttr = 'data-code-cell="' + cell + '"';
        let lineAttr = 'data-code-annotation="' +  annotation + '"';
        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';
        return selector;
      }
      const selectCodeLines = (annoteEl) => {
        const doc = window.document;
        const targetCell = annoteEl.getAttribute("data-target-cell");
        const targetAnnotation = annoteEl.getAttribute("data-target-annotation");
        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));
        const lines = annoteSpan.getAttribute("data-code-lines").split(",");
        const lineIds = lines.map((line) => {
          return targetCell + "-" + line;
        })
        let top = null;
        let height = null;
        let parent = null;
        if (lineIds.length > 0) {
            //compute the position of the single el (top and bottom and make a div)
            const el = window.document.getElementById(lineIds[0]);
            top = el.offsetTop;
            height = el.offsetHeight;
            parent = el.parentElement.parentElement;
          if (lineIds.length > 1) {
            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);
            const bottom = lastEl.offsetTop + lastEl.offsetHeight;
            height = bottom - top;
          }
          if (top !== null && height !== null && parent !== null) {
            // cook up a div (if necessary) and position it 
            let div = window.document.getElementById("code-annotation-line-highlight");
            if (div === null) {
              div = window.document.createElement("div");
              div.setAttribute("id", "code-annotation-line-highlight");
              div.style.position = 'absolute';
              parent.appendChild(div);
            }
            div.style.top = top - 2 + "px";
            div.style.height = height + 4 + "px";
            div.style.left = 0;
            let gutterDiv = window.document.getElementById("code-annotation-line-highlight-gutter");
            if (gutterDiv === null) {
              gutterDiv = window.document.createElement("div");
              gutterDiv.setAttribute("id", "code-annotation-line-highlight-gutter");
              gutterDiv.style.position = 'absolute';
              const codeCell = window.document.getElementById(targetCell);
              const gutter = codeCell.querySelector('.code-annotation-gutter');
              gutter.appendChild(gutterDiv);
            }
            gutterDiv.style.top = top - 2 + "px";
            gutterDiv.style.height = height + 4 + "px";
          }
          selectedAnnoteEl = annoteEl;
        }
      };
      const unselectCodeLines = () => {
        const elementsIds = ["code-annotation-line-highlight", "code-annotation-line-highlight-gutter"];
        elementsIds.forEach((elId) => {
          const div = window.document.getElementById(elId);
          if (div) {
            div.remove();
          }
        });
        selectedAnnoteEl = undefined;
      };
        // Handle positioning of the toggle
    window.addEventListener(
      "resize",
      throttle(() => {
        elRect = undefined;
        if (selectedAnnoteEl) {
          selectCodeLines(selectedAnnoteEl);
        }
      }, 10)
    );
    function throttle(fn, ms) {
    let throttle = false;
    let timer;
      return (...args) => {
        if(!throttle) { // first call gets through
            fn.apply(this, args);
            throttle = true;
        } else { // all the others get throttled
            if(timer) clearTimeout(timer); // cancel #2
            timer = setTimeout(() => {
              fn.apply(this, args);
              timer = throttle = false;
            }, ms);
        }
      };
    }
      // Attach click handler to the DT
      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');
      for (const annoteDlNode of annoteDls) {
        annoteDlNode.addEventListener('click', (event) => {
          const clickedEl = event.target;
          if (clickedEl !== selectedAnnoteEl) {
            unselectCodeLines();
            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');
            if (activeEl) {
              activeEl.classList.remove('code-annotation-active');
            }
            selectCodeLines(clickedEl);
            clickedEl.classList.add('code-annotation-active');
          } else {
            // Unselect the line
            unselectCodeLines();
            clickedEl.classList.remove('code-annotation-active');
          }
        });
      }
  const findCites = (el) => {
    const parentEl = el.parentElement;
    if (parentEl) {
      const cites = parentEl.dataset.cites;
      if (cites) {
        return {
          el,
          cites: cites.split(' ')
        };
      } else {
        return findCites(el.parentElement)
      }
    } else {
      return undefined;
    }
  };
  var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
  for (var i=0; i<bibliorefs.length; i++) {
    const ref = bibliorefs[i];
    const citeInfo = findCites(ref);
    if (citeInfo) {
      tippyHover(citeInfo.el, function() {
        var popup = window.document.createElement('div');
        citeInfo.cites.forEach(function(cite) {
          var citeDiv = window.document.createElement('div');
          citeDiv.classList.add('hanging-indent');
          citeDiv.classList.add('csl-entry');
          var biblioDiv = window.document.getElementById('ref-' + cite);
          if (biblioDiv) {
            citeDiv.innerHTML = biblioDiv.innerHTML;
          }
          popup.appendChild(citeDiv);
        });
        return popup.innerHTML;
      });
    }
  }
});
</script>
</div> <!-- /content -->

</body>

</html>
</iframe></section></section> ]]></description>
  <category>fashion</category>
  <category>ML</category>
  <category>vision</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/logo_analysis.html</guid>
  <pubDate>Tue, 11 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Search and Discovery for Luxury Fashion</title>
  <dc:creator>Justin Donaldson</dc:creator>
  <link>https://hushh-labs.github.io/hushh-labs-blog/posts/image_search_with_text.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/omgjjd_a_woman_searching_through_layers_of_a_neural_network_bra_621c77d0-55f4-4be8-8b8e-712e3dd50819.png" class="img-fluid figure-img"></p>
<figcaption>Enhancing the search for the expression of self</figcaption>
</figure>
</div>
<section id="embedding-fashion-related-media-for-style-discovery." class="level1">
<h1>Embedding Fashion Related Media for Style Discovery.</h1>
<p>In the realm of luxury fashion, image search plays a pivotal role in discovering visually stunning and high-end products. While traditional TF/IDF (Term Frequency-Inverse Document Frequency) search has been a go-to method, the recent emergence of text-generated Large Language Model (LLM) embeddings for image search has revolutionized the way we explore luxury fashion. This cutting-edge approach surpasses the limitations of TF/IDF search, empowering users to find the epitome of elegance and style effortlessly.</p>
<p>We’ll walk you through all the ways that neural network search is poised to supercharge the fashion retail industry. If you’d like to play around on your own, you can enter your own queries below, and don’t forget to <a href="mailto:info@hush1one.com">tell us</a> what you discover!</p>
<iframe src="https://hushh-hushh.hf.space" frameborder="0" width="850" height="450"></iframe>
<section id="unleashing-the-potential-of-llm-embeddings" class="level2">
<h2 class="anchored" data-anchor-id="unleashing-the-potential-of-llm-embeddings">Unleashing the Potential of LLM Embeddings</h2>
<p>Large Language Models, such as GPT-3.5, possess remarkable natural language processing capabilities. Trained on massive amounts of textual data, these models acquire a deep understanding of language nuances, syntax, and semantics in a broad array of cultural contexts. LLM embeddings are numerical representations derived from text, capturing the intricate contextual information inherent in sentences, paragraphs, or documents.</p>
</section>
<section id="why-embedding-search-for-stylistic-search" class="level2">
<h2 class="anchored" data-anchor-id="why-embedding-search-for-stylistic-search">Why Embedding Search for Stylistic Search?</h2>
<p>By harnessing the power of LLM embeddings, we unlock a number of advantages for searching or navigating a particular style:</p>
<ol type="1">
<li>Enhanced Semantic Relevance</li>
</ol>
<p>LLM embeddings encapsulate a profound comprehension of language semantics, leading to remarkably accurate search results. In the context of luxury fashion, where precision and exquisite details matter, LLM embeddings grasp the subtle nuances and connotations associated with the imagery high-end fashion. This visio-semantic awareness ensures that search results align with the desired level of opulence, refinement, and aesthetic appeal.</p>
<p>For instance, LLM embedding search can identify items not only by color, but also by abstract concepts of style, such as “dress shoes”.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/dress_shoes.png" class="img-fluid figure-img"></p>
<figcaption>Image of dress shoes</figcaption>
</figure>
</div>
<p>Keep in mind that this particular search engine does <em>not</em> include any terminology related to shoes or style. The query process is entirely driven from image analysis alone.</p>
<ol start="2" type="1">
<li>Fashion-Specific Vocabulary and Concepts</li>
</ol>
<p>Luxury fashion is an industry replete with distinct terminologies and industry-specific jargon. Traditional TF/IDF search may struggle to capture the essence of these nuanced fashion terms, leading to suboptimal search outcomes. Conversely, LLM embeddings excel in comprehending fashion-specific vocabulary, recognizing brand names, fashion trends, and intricate design elements. This prowess enables users to delve into the world of luxury fashion with unparalleled accuracy.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/wedge_heel.png" class="img-fluid figure-img"></p>
<figcaption>Image of wedge heel</figcaption>
</figure>
</div>
<ol start="3" type="1">
<li>Context-Aware Search</li>
</ol>
<p>In the realm of luxury fashion, context plays a pivotal role in understanding the true essence of a product. LLM embeddings excel at capturing the contextual information present in the shape of a product, leading to more refined and contextually appropriate image search results. Users can now effortlessly explore images that encapsulate the desired style, occasion, or fashion statement, ensuring a seamless and personalized luxury fashion journey.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hushh-labs.github.io/hushh-labs-blog/posts/images/vacation_shoes.png" class="img-fluid figure-img"></p>
<figcaption>Image of vacation shoes</figcaption>
</figure>
</div>
<ol start="4" type="1">
<li>Uniting Text and Visuals</li>
</ol>
<p>The marriage of text and visuals is at the heart of luxury fashion image search. LLM embeddings act as a bridge, facilitating a seamless connection between the textual descriptions and the visual representation of fashion products. By leveraging LLM embeddings, users can effortlessly navigate the realm of luxury fashion, exploring visually captivating images that align with their refined tastes and preferences.</p>
<p>In conclusion, the use of LLM embeddings for luxury fashion image search transcends the limitations of conventional TF/IDF search. By harnessing the semantic understanding, fashion-specific vocabulary, and contextual awareness ingrained in LLM embeddings, users can embark on a visually enchanting journey through the world of luxury fashion. Experience the epitome of elegance and style like never before, with LLM-powered image search in luxury fashion.</p>


</section>
</section>

 ]]></description>
  <category>search</category>
  <category>embedding</category>
  <category>discovery</category>
  <guid>https://hushh-labs.github.io/hushh-labs-blog/posts/image_search_with_text.html</guid>
  <pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
